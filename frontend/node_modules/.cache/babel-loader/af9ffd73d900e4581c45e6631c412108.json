{"ast":null,"code":"var _jsxFileName = \"/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { deleteComment, deleteNews, postComment } from \"../api/api\";\nimport { postReactionComment, getSingleNewsComments } from \"../api/api\";\nimport Footer from \"./footer\";\nimport { ErrorContext } from \"./error\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewsSinglePage() {\n  _s();\n\n  // cargar noticias\n  const [news, setNews] = useState({});\n  const {\n    id\n  } = useParams();\n  const [, setError] = useContext(ErrorContext);\n  const [token] = useContext(Token);\n  const decodedToken = jwt_decode(token);\n  const {\n    id: idToken\n  } = decodedToken;\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n\n    getNews();\n  }, [id, setError]); // Cargar comentarios\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      try {\n        const response = await getSingleNewsComments(id);\n        const body = await response.json();\n\n        if (response.ok) {\n          setComments(body);\n        } else {\n          throw new Error(body.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    getComments();\n  }, [id, setError]); // Crear comentario\n\n  const [createComment, setCreateComment] = useState([]);\n\n  const postCommentHandler = async e => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment\n    };\n\n    try {\n      const response = await postComment(requestBody, id, token);\n      const body = await response.json();\n\n      if (response.ok) {\n        const getComments = async () => {\n          try {\n            const response = await getSingleNewsComments(id);\n            const body = await response.json();\n\n            if (response.ok) {\n              setComments(body);\n            } else {\n              throw new Error(body.error);\n            }\n          } catch (error) {\n            setError(error.message);\n          }\n        };\n\n        getComments();\n      } else {\n        throw new Error(body.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }; // Eliminar noticia\n\n\n  async function deleteNewsHandler(e) {\n    try {\n      const idNews = e.target.value;\n      const res = await deleteNews(idNews, token);\n      const bodyDeLaRespuesta = await res.json();\n\n      if (res.ok) {\n        setNews();\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  } // Eliminar comentario\n\n\n  async function deleteCommentHandler(e) {\n    try {\n      const idComment = e.target.value;\n      const res = await deleteComment(idComment, token);\n      const bodyDeLaRespuesta = await res.json();\n\n      if (res.ok) {\n        setComments(comments.filter(comment => comment.id !== Number(idComment)));\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  } //Reaccionar a Comentario\n\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction\n    };\n\n    try {\n      const res = await postReactionComment(vote, id, token);\n      const data = await res.json();\n\n      if (res.ok) {\n        setComments(comments.map(comment => {\n          if (comment.id === id) {\n            return data;\n          }\n\n          return comment;\n        }));\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  console.log(news);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !news ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Object.keys(news).length > 0 && /*#__PURE__*/_jsxDEV(News, {\n        noticias: news\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: news.id_user === idToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: \"block\"\n          },\n          value: news.id,\n          onClick: deleteNewsHandler,\n          children: \"Borrar noticia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: \"none\"\n          },\n          value: news.id,\n          onClick: deleteNewsHandler,\n          children: \"Borrar noticia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Comment, {\n            comment: comment,\n            reactComment: reactComment\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), comment.id_user === idToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: \"block\"\n            },\n            value: comment.id,\n            onClick: deleteCommentHandler,\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              display: \"none\"\n            },\n            value: comment.id,\n            onClick: deleteCommentHandler,\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postCommentHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Comentario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              type: \"text\",\n              rows: \"8\",\n              value: createComment,\n              onChange: e => setCreateComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Publicar Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(NewsSinglePage, \"scyRrwwUq1pE9/1hmQubwcTv9oc=\", false, function () {\n  return [useParams];\n});\n\n_c = NewsSinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsSinglePage\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js"],"names":["useContext","useEffect","useState","Redirect","useParams","Token","deleteComment","deleteNews","postComment","postReactionComment","getSingleNewsComments","Footer","ErrorContext","Comment","News","jwt_decode","NewsSinglePage","news","setNews","id","setError","token","decodedToken","idToken","getNews","response","fetch","method","headers","json","ok","Error","error","message","comments","setComments","getComments","body","createComment","setCreateComment","postCommentHandler","e","preventDefault","requestBody","comment","deleteNewsHandler","idNews","target","value","res","bodyDeLaRespuesta","deleteCommentHandler","idComment","filter","Number","reactComment","reaction","vote","like","dislike","data","map","console","log","Object","keys","length","id_user","display"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { deleteComment, deleteNews, postComment } from \"../api/api\";\nimport { postReactionComment, getSingleNewsComments } from \"../api/api\";\nimport Footer from \"./footer\";\nimport { ErrorContext } from \"./error\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nimport jwt_decode from \"jwt-decode\";\n\nexport function NewsSinglePage() {\n  // cargar noticias\n  const [news, setNews] = useState({});\n  const { id } = useParams();\n  const [, setError] = useContext(ErrorContext);\n  const [token] = useContext(Token);\n  const decodedToken = jwt_decode(token);\n  const { id: idToken } = decodedToken;\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/api/v1/news/${id}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-type\": \"application/json\",\n            },\n          }\n        );\n        const json = await response.json();\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    getNews();\n  }, [id, setError]);\n\n  // Cargar comentarios\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      try {\n        const response = await getSingleNewsComments(id);\n        const body = await response.json();\n        if (response.ok) {\n          setComments(body);\n        } else {\n          throw new Error(body.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getComments();\n  }, [id, setError]);\n\n  // Crear comentario\n\n  const [createComment, setCreateComment] = useState([]);\n\n  const postCommentHandler = async (e) => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment,\n    };\n\n    try {\n      const response = await postComment(requestBody, id, token);\n      const body = await response.json();\n      if (response.ok) {\n        const getComments = async () => {\n          try {\n            const response = await getSingleNewsComments(id);\n            const body = await response.json();\n            if (response.ok) {\n              setComments(body);\n            } else {\n              throw new Error(body.error);\n            }\n          } catch (error) {\n            setError(error.message);\n          }\n        };\n        getComments();\n      } else {\n        throw new Error(body.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Eliminar noticia\n\n  async function deleteNewsHandler(e) {\n    try {\n      const idNews = e.target.value;\n      const res = await deleteNews(idNews, token);\n      const bodyDeLaRespuesta = await res.json();\n      if (res.ok) {\n        setNews();\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  // Eliminar comentario\n\n  async function deleteCommentHandler(e) {\n    try {\n      const idComment = e.target.value;\n      const res = await deleteComment(idComment, token);\n      const bodyDeLaRespuesta = await res.json();\n      if (res.ok) {\n        setComments(\n          comments.filter((comment) => comment.id !== Number(idComment))\n        );\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  //Reaccionar a Comentario\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction,\n    };\n    try {\n      const res = await postReactionComment(vote, id, token);\n      const data = await res.json();\n      if (res.ok) {\n        setComments(\n          comments.map((comment) => {\n            if (comment.id === id) {\n              return data;\n            }\n            return comment;\n          })\n        );\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n  console.log(news);\n\n  return (\n    <>\n      {!news ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <>\n          {Object.keys(news).length > 0 && <News noticias={news}></News>}\n          <div>\n            {news.id_user === idToken ? (\n              <button\n                style={{ display: \"block\" }}\n                value={news.id}\n                onClick={deleteNewsHandler}\n              >\n                Borrar noticia\n              </button>\n            ) : (\n              <button\n                style={{ display: \"none\" }}\n                value={news.id}\n                onClick={deleteNewsHandler}\n              >\n                Borrar noticia\n              </button>\n            )}\n          </div>\n          <div>\n            {comments.map((comment) => (\n              <>\n                <Comment\n                  key={comment.id}\n                  comment={comment}\n                  reactComment={reactComment}\n                ></Comment>\n                {comment.id_user === idToken ? (\n                  <button\n                    style={{ display: \"block\" }}\n                    value={comment.id}\n                    onClick={deleteCommentHandler}\n                  >\n                    Eliminar\n                  </button>\n                ) : (\n                  <button\n                    style={{ display: \"none\" }}\n                    value={comment.id}\n                    onClick={deleteCommentHandler}\n                  >\n                    Eliminar\n                  </button>\n                )}\n              </>\n            ))}\n          </div>\n          <div>\n            <form onSubmit={postCommentHandler}>\n              <div>\n                <h4>Comentario</h4>\n                <textarea\n                  name=\"comment\"\n                  type=\"text\"\n                  rows=\"8\"\n                  value={createComment}\n                  onChange={(e) => setCreateComment(e.target.value)}\n                />\n              </div>\n              <input type=\"submit\" value=\"Publicar Comentario\"></input>\n            </form>\n          </div>\n          <Footer />\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}