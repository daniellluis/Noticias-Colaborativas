{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getTopNews, getDateNews } from \"../api/api\";\n\nfunction useRemoteNewsTop() {\n  _s();\n\n  const [topNews, setTopNews] = useState([]);\n  useEffect(() => {\n    const cargarTopNews = async () => {\n      try {\n        const respuesta = await getTopNews();\n        console.log(\"respuest\", respuesta);\n\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setTopNews(body);\n        } else {\n          setTopNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n\n    const intervalo = setInterval(cargarTopNews, 1000);\n    cargarTopNews();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, []);\n  return [topNews, setTopNews];\n}\n\n_s(useRemoteNewsTop, \"8LSHi4pJ32FCI4dZ/rjT+kBbXMk=\");\n\nfunction useRemoteNewsDate() {\n  _s2();\n\n  const [topNews, setDateNews] = useState([]);\n  useEffect(() => {\n    const cargarDateNews = async () => {\n      try {\n        const respuesta = await getDateNews();\n        console.log(\"respuest\", respuesta);\n\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setDateNews(body);\n        } else {\n          setDateNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n\n    const intervalo = setInterval(cargarDateNews, 1000);\n    cargarDateNews();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, []);\n  return [topNews, setDateNews];\n}\n\n_s2(useRemoteNewsDate, \"/V5h7WZIDr+uvRXKVEXeXJDhpmY=\");\n\nexport { useRemoteNewsTop, useRemoteNewsDate };","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/hooks/remoteHooks.js"],"names":["useEffect","useState","getTopNews","getDateNews","useRemoteNewsTop","topNews","setTopNews","cargarTopNews","respuesta","console","log","ok","body","json","msg","error","intervalo","setInterval","clearInterval","useRemoteNewsDate","setDateNews","cargarDateNews"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,YAAxC;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAMC,SAAS,GAAG,MAAMN,UAAU,EAAlC;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,SAAxB;;AACA,YAAIA,SAAS,CAACG,EAAd,EAAkB;AAChB,gBAAMC,IAAI,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAAnB;AACAP,UAAAA,UAAU,CAACM,IAAD,CAAV;AACD,SAHD,MAGO;AACLN,UAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,OATD,CASE,OAAOQ,GAAP,EAAY;AACZL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF,KAbD;;AAcA,UAAME,SAAS,GAAGC,WAAW,CAACV,aAAD,EAAgB,IAAhB,CAA7B;AACAA,IAAAA,aAAa;AACb,WAAO,MAAM;AACXW,MAAAA,aAAa,CAACF,SAAD,CAAb;AACD,KAFD;AAGD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SAAO,CAACX,OAAD,EAAUC,UAAV,CAAP;AACD;;GAzBQF,gB;;AA2BT,SAASe,iBAAT,GAA6B;AAAA;;AAC3B,QAAM,CAACd,OAAD,EAAUe,WAAV,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMb,SAAS,GAAG,MAAML,WAAW,EAAnC;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,SAAxB;;AACA,YAAIA,SAAS,CAACG,EAAd,EAAkB;AAChB,gBAAMC,IAAI,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAAnB;AAEAO,UAAAA,WAAW,CAACR,IAAD,CAAX;AACD,SAJD,MAIO;AACLQ,UAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,OAVD,CAUE,OAAON,GAAP,EAAY;AACZL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF,KAdD;;AAeA,UAAME,SAAS,GAAGC,WAAW,CAACI,cAAD,EAAiB,IAAjB,CAA7B;AACAA,IAAAA,cAAc;AACd,WAAO,MAAM;AACXH,MAAAA,aAAa,CAACF,SAAD,CAAb;AACD,KAFD;AAGD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SAAO,CAACX,OAAD,EAAUe,WAAV,CAAP;AACD;;IA3BQD,iB;;AA6BT,SAASf,gBAAT,EAA2Be,iBAA3B","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getTopNews, getDateNews } from \"../api/api\";\n\nfunction useRemoteNewsTop() {\n  const [topNews, setTopNews] = useState([]);\n  useEffect(() => {\n    const cargarTopNews = async () => {\n      try {\n        const respuesta = await getTopNews();\n        console.log(\"respuest\", respuesta);\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setTopNews(body);\n        } else {\n          setTopNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n    const intervalo = setInterval(cargarTopNews, 1000);\n    cargarTopNews();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, []);\n\n  return [topNews, setTopNews];\n}\n\nfunction useRemoteNewsDate() {\n  const [topNews, setDateNews] = useState([]);\n\n  useEffect(() => {\n    const cargarDateNews = async () => {\n      try {\n        const respuesta = await getDateNews();\n        console.log(\"respuest\", respuesta);\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n\n          setDateNews(body);\n        } else {\n          setDateNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n    const intervalo = setInterval(cargarDateNews, 1000);\n    cargarDateNews();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, []);\n\n  return [topNews, setDateNews];\n}\n\nexport { useRemoteNewsTop, useRemoteNewsDate };\n"]},"metadata":{},"sourceType":"module"}