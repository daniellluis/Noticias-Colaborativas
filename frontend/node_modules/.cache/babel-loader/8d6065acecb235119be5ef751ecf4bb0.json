{"ast":null,"code":"var _jsxFileName = \"/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/UpdateUserProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { updateProfile, postFileImage, getProfile } from \"../api/api\";\nimport { Token } from \"../components/token\";\nimport { ErrorContext } from \"./error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUserProfile = props => {\n  _s();\n\n  const [name, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [bio, setBiography] = useState(\"\");\n  const [token] = useContext(Token);\n  const [, setFile] = useState();\n  const [, setError] = useContext(ErrorContext);\n  const fileInput = useRef();\n  useEffect(() => {\n    const loadProfile = async () => {\n      try {\n        const response = await getProfile(token);\n        const body = await response.json();\n\n        if (response.ok) {\n          // setProfile()\n          setUsername(body.user.name);\n          setPassword(body.user.password);\n          setRepeatPassword(body.user.password);\n          setEmail(body.user.email);\n          setBiography(body.user.bio);\n        } else {\n          throw new Error(body.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    loadProfile();\n  }, [token, setError]);\n\n  const updateAvatar = async e => {\n    e.preventDefault();\n    const fileFromRef = fileInput.current.files[0];\n    let requestBody = new FormData();\n    requestBody.append(\"profileImage\", fileFromRef);\n    const response = await postFileImage(requestBody, token);\n    const responseBody = await response.json();\n\n    if (response.ok) {\n      console.log(\"todo ok\", responseBody);\n    } else {\n      console.error(\"todo KO\", responseBody);\n    }\n  };\n\n  const saveAvatar = e => {\n    console.dir(e.target);\n    setFile(e.target.files[0]);\n  };\n\n  const handleEditUserProfile = async e => {\n    e.preventDefault();\n    const requestBody = {\n      name,\n      email,\n      password,\n      repeatPassword,\n      bio\n    };\n    const response = await updateProfile(requestBody, token);\n    const body = await response.json();\n    console.log(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateAvatar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInput,\n          onChange: saveAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditUserProfile,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"name\",\n          value: name,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Repetir Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"repeatPassword\",\n          type: \"password\",\n          value: repeatPassword,\n          onChange: e => setRepeatPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Tu biograf\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          type: \"text\",\n          rows: \"8\",\n          value: bio,\n          onChange: e => setBiography(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Guardar Cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUserProfile, \"HlNf1QQfMFpRWNymkER3jD28ooI=\");\n\n_c = UpdateUserProfile;\nexport default UpdateUserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUserProfile\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/UpdateUserProfile.js"],"names":["useContext","useEffect","useRef","useState","updateProfile","postFileImage","getProfile","Token","ErrorContext","UpdateUserProfile","props","name","setUsername","password","setPassword","repeatPassword","setRepeatPassword","email","setEmail","bio","setBiography","token","setFile","setError","fileInput","loadProfile","response","body","json","ok","user","Error","error","message","updateAvatar","e","preventDefault","fileFromRef","current","files","requestBody","FormData","append","responseBody","console","log","saveAvatar","dir","target","handleEditUserProfile","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\nimport { updateProfile, postFileImage, getProfile } from \"../api/api\";\nimport { Token } from \"../components/token\";\nimport { ErrorContext } from \"./error\";\n\nconst UpdateUserProfile = (props) => {\n  const [name, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [bio, setBiography] = useState(\"\");\n  const [token] = useContext(Token);\n  const [, setFile] = useState();\n  const [, setError] = useContext(ErrorContext);\n  const fileInput = useRef();\n\n  useEffect(() => {\n    const loadProfile = async () => {\n      try {\n        const response = await getProfile(token);\n        const body = await response.json();\n        if (response.ok) {\n          // setProfile()\n          setUsername(body.user.name);\n          setPassword(body.user.password);\n          setRepeatPassword(body.user.password);\n          setEmail(body.user.email);\n          setBiography(body.user.bio);\n        } else {\n          throw new Error(body.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    loadProfile();\n  }, [token, setError]);\n\n  const updateAvatar = async (e) => {\n    e.preventDefault();\n    const fileFromRef = fileInput.current.files[0];\n\n    let requestBody = new FormData();\n    requestBody.append(\"profileImage\", fileFromRef);\n\n    const response = await postFileImage(requestBody, token);\n\n    const responseBody = await response.json();\n    if (response.ok) {\n      console.log(\"todo ok\", responseBody);\n    } else {\n      console.error(\"todo KO\", responseBody);\n    }\n  };\n  const saveAvatar = (e) => {\n    console.dir(e.target);\n    setFile(e.target.files[0]);\n  };\n\n  const handleEditUserProfile = async (e) => {\n    e.preventDefault();\n    const requestBody = {\n      name,\n      email,\n      password,\n      repeatPassword,\n      bio,\n    };\n\n    const response = await updateProfile(requestBody, token);\n\n    const body = await response.json();\n    console.log(body);\n  };\n\n  return (\n    <div>\n      <form onSubmit={updateAvatar}>\n        <div>\n          <input type=\"file\" ref={fileInput} onChange={saveAvatar}></input>\n          <input type=\"submit\" value=\"Guardar\"></input>\n        </div>\n      </form>\n\n      <h2>Update Profile</h2>\n      <form onSubmit={handleEditUserProfile}>\n        <div>\n          <label htmlFor=\"name\">nombre</label>\n          <input\n            name=\"name\"\n            type=\"name\"\n            value={name}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">email</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Contraseña</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Repetir Contraseña</label>\n          <input\n            name=\"repeatPassword\"\n            type=\"password\"\n            value={repeatPassword}\n            onChange={(e) => setRepeatPassword(e.target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tu biografía</h4>\n          <textarea\n            name=\"bio\"\n            type=\"text\"\n            rows=\"8\"\n            value={bio}\n            onChange={(e) => setBiography(e.target.value)}\n          />\n        </div>\n        <input type=\"submit\" value=\"Guardar Cambios\"></input>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateUserProfile;\n"]},"metadata":{},"sourceType":"module"}