{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return [windowSize, setWindowSize];\n}\n\n_s(useWindowSize, \"9EkD4L1URrhvJJDL5tl4D0ri/UI=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/hooks/useWindowSize.js"],"names":["useEffect","useState","useWindowSize","windowSize","setWindowSize","width","undefined","handleResize","window","innerWidth","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC;AAC3CI,IAAAA,KAAK,EAAEC;AADoC,GAAD,CAA5C;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASO,YAAT,GAAwB;AACtB;AACAH,MAAAA,aAAa,CAAC;AACZC,QAAAA,KAAK,EAAEG,MAAM,CAACC;AADF,OAAD,CAAb;AAGD,KAPa,CAQd;;;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC,EATc,CAUd;;AACAA,IAAAA,YAAY,GAXE,CAYd;;AACA,WAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC,CAAb;AACD,GAdQ,EAcN,EAdM,CAAT,CANuB,CAoBf;;AACR,SAAO,CAACJ,UAAD,EAAaC,aAAb,CAAP;AACD;;GAtBQF,a;;AAwBT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return [windowSize, setWindowSize];\n}\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}