{"ast":null,"code":"var _jsxFileName = \"/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { postComment } from \"../api/api\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewsSinglePage() {\n  _s();\n\n  // NOTICIA\n  const [news, setNews] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function getNews() {\n      const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        setNews(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    }\n\n    getNews();\n  }, [id]); // COMENTARIOS\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(`http://localhost:3000/api/v1/news/${id}/comments`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    };\n\n    const intervalo = setInterval(getComment, 1000);\n    getComment();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, [id]); // Crear comentario\n\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async e => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment\n    };\n    const response = await postComment(requestBody, id, token);\n    const body = await response.json();\n    console.log(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(News, {\n      noticias: news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.find(comment => {\n        return comment.id === comment( /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postCommentHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            type: \"text\",\n            rows: \"8\",\n            value: createComment,\n            onChange: e => setCreateComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Publicar Comentario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewsSinglePage, \"m72iSJECP9jjEoIqc16zu/DAr0Y=\", false, function () {\n  return [useParams];\n});\n\n_c = NewsSinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsSinglePage\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js"],"names":["useContext","useEffect","useState","useParams","Token","postComment","Comment","News","NewsSinglePage","news","setNews","id","getNews","response","fetch","method","headers","ok","json","console","error","comments","setComments","getComment","intervalo","setInterval","clearInterval","createComment","setCreateComment","token","postCommentHandler","e","preventDefault","requestBody","comment","body","log","map","find","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { postComment } from \"../api/api\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\n\nexport function NewsSinglePage() {\n  // NOTICIA\n  const [news, setNews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getNews() {\n      const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      });\n      if (response.ok) {\n        const json = await response.json();\n        setNews(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    }\n    getNews();\n  }, [id]);\n\n  // COMENTARIOS\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(\n        `http://localhost:3000/api/v1/news/${id}/comments`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      );\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    };\n    const intervalo = setInterval(getComment, 1000);\n    getComment();\n    return () => {\n      clearInterval(intervalo);\n    };\n  }, [id]);\n\n  // Crear comentario\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async (e) => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment,\n    };\n\n    const response = await postComment(requestBody, id, token);\n\n    const body = await response.json();\n    console.log(body);\n  };\n\n  return (\n    <>\n      <News noticias={news}></News>\n      <div>\n        {comments.map((comment) => (\n          <Comment key={comment.id} comment={comment}></Comment>\n        ))}\n      </div>\n      <div>\n        {comments.find((comment) => {\n          return (\n            comment.id ===\n            comment(<Comment key={comment.id} comment={comment}></Comment>)\n          );\n        })}\n      </div>\n      <div>\n        <form onSubmit={postCommentHandler}>\n          <div>\n            <h4>Comentario</h4>\n            <textarea\n              name=\"comment\"\n              type=\"text\"\n              rows=\"8\"\n              value={createComment}\n              onChange={(e) => setCreateComment(e.target.value)}\n            />\n          </div>\n          <input type=\"submit\" value=\"Publicar Comentario\"></input>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}