{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const useLocalStorage = (key, defaultValue) => {\n  _s();\n\n  const initialValue = localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : defaultValue;\n  const [data, setData] = useState(initialValue);\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n  return [data, setData];\n};\n\n_s(useLocalStorage, \"FS4G564HkhuTey7n+etlXNHGFTo=\");\n\nexport const useDate = milliseconds => {\n  _s2();\n\n  const [date, setDate] = useState(new Date().toLocaleString());\n  useEffect(() => {\n    //efecto\n    const interval = setInterval(() => {\n      const newDate = new Date().toLocaleString();\n      setDate(newDate);\n    }, milliseconds); // función de limpieza\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [milliseconds]); // Lista de variables a monitorizar\n\n  return date;\n};\n\n_s2(useDate, \"AqXIVGIvi17WfMpznRBQL6GbxPE=\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","useLocalStorage","key","defaultValue","initialValue","localStorage","getItem","JSON","parse","data","setData","setItem","stringify","useDate","milliseconds","date","setDate","Date","toLocaleString","interval","setInterval","newDate","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AACpD,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,IACjBK,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAX,CADiB,GAEjBC,YAFJ;AAIA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACI,YAAD,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACM,OAAb,CAAqBT,GAArB,EAA0BK,IAAI,CAACK,SAAL,CAAeH,IAAf,CAA1B;AACD,GAFQ,EAEN,CAACA,IAAD,EAAOP,GAAP,CAFM,CAAT;AAGA,SAAO,CAACO,IAAD,EAAOC,OAAP,CAAP;AACD,CAXM;;GAAMT,e;;AAab,OAAO,MAAMY,OAAO,GAAIC,YAAD,IAAkB;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAIiB,IAAJ,GAAWC,cAAX,EAAD,CAAhC;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAMC,OAAO,GAAG,IAAIJ,IAAJ,GAAWC,cAAX,EAAhB;AACAF,MAAAA,OAAO,CAACK,OAAD,CAAP;AACD,KAH2B,EAGzBP,YAHyB,CAA5B,CAFc,CAOd;;AACA,WAAO,MAAM;AACXQ,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GAXQ,EAWN,CAACL,YAAD,CAXM,CAAT,CAFuC,CAanB;;AACpB,SAAOC,IAAP;AACD,CAfM;;IAAMF,O","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useLocalStorage = (key, defaultValue) => {\n  const initialValue = localStorage.getItem(key)\n    ? JSON.parse(localStorage.getItem(key))\n    : defaultValue;\n\n  const [data, setData] = useState(initialValue);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n  return [data, setData];\n};\n\nexport const useDate = (milliseconds) => {\n  const [date, setDate] = useState(new Date().toLocaleString());\n  useEffect(() => {\n    //efecto\n    const interval = setInterval(() => {\n      const newDate = new Date().toLocaleString();\n      setDate(newDate);\n    }, milliseconds);\n\n    // función de limpieza\n    return () => {\n      clearInterval(interval);\n    };\n  }, [milliseconds]); // Lista de variables a monitorizar\n  return date;\n};\n"]},"metadata":{},"sourceType":"module"}