{"ast":null,"code":"var _jsxFileName = \"/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { postComment } from \"../api/api\";\nimport { postReactionComment } from \"../api/api\"; // import { deleteNews } from \"../api/api\";\n\nimport { ErrorContext } from \"./error\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewsSinglePage() {\n  _s();\n\n  // NOTICIA\n  const [news, setNews] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n\n    getNews();\n  }, [id, setError]); // COMENTARIOS\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(`http://localhost:3000/api/v1/news/${id}/comments`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    }; // const intervalo = setInterval(getComment, 1000);\n\n\n    getComment(); // return () => {\n    //   clearInterval(intervalo);\n    // };\n  }, [id]); // Crear comentario\n\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async e => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment\n    };\n    const response = await postComment(requestBody, id, token);\n    const body = await response.json();\n    console.log(body);\n  }; // ELIMINAR NOTICIA\n  // async function deleteNewsHandler() {\n  //   console.log(news.id);\n  //   const res = await deleteNews(news.id, token);\n  //   const bodyDeLaRespuesta = await res.json();\n  // }\n\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction\n    };\n    const res = await postReactionComment(vote, id, token);\n    const data = await res.json();\n    console.log(data); //TODO: meter esto nun trycatch\n\n    setComments(comments.map(comment => {\n      if (comment.id === id) {\n        return data;\n      }\n\n      return comment;\n    })); // alert(bodyDeLaRespuesta.error);\n  }\n\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(News, {\n      noticias: news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Borrar noticia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        reactComment: reactComment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postCommentHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            type: \"text\",\n            rows: \"8\",\n            value: createComment,\n            onChange: e => setCreateComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Publicar Comentario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewsSinglePage, \"pc5ZLWe1fl/CGqVczxC9LSgld0Y=\", false, function () {\n  return [useParams];\n});\n\n_c = NewsSinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsSinglePage\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js"],"names":["useContext","useEffect","useState","useParams","Token","postComment","postReactionComment","ErrorContext","Comment","News","NewsSinglePage","news","setNews","id","setError","getNews","response","fetch","method","headers","json","ok","Error","error","message","comments","setComments","getComment","console","createComment","setCreateComment","token","postCommentHandler","e","preventDefault","requestBody","comment","body","log","reactComment","reaction","vote","like","dislike","res","data","map","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Token } from \"../components/token\";\n\nimport { postComment } from \"../api/api\";\nimport { postReactionComment } from \"../api/api\";\n// import { deleteNews } from \"../api/api\";\n\nimport { ErrorContext } from \"./error\";\n\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nexport function NewsSinglePage() {\n  // NOTICIA\n  const [news, setNews] = useState([]);\n  const { id } = useParams();\n  const [, setError] = useContext(ErrorContext);\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/api/v1/news/${id}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-type\": \"application/json\",\n            },\n          }\n        );\n        const json = await response.json();\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    getNews();\n  }, [id, setError]);\n\n  // COMENTARIOS\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(\n        `http://localhost:3000/api/v1/news/${id}/comments`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      );\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    };\n    // const intervalo = setInterval(getComment, 1000);\n    getComment();\n    // return () => {\n    //   clearInterval(intervalo);\n    // };\n  }, [id]);\n\n  // Crear comentario\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async (e) => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment,\n    };\n\n    const response = await postComment(requestBody, id, token);\n\n    const body = await response.json();\n    console.log(body);\n  };\n\n  // ELIMINAR NOTICIA\n\n  // async function deleteNewsHandler() {\n  //   console.log(news.id);\n  //   const res = await deleteNews(news.id, token);\n  //   const bodyDeLaRespuesta = await res.json();\n  // }\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction,\n    };\n\n    const res = await postReactionComment(vote, id, token);\n\n    const data = await res.json();\n\n    console.log(data);\n\n    //TODO: meter esto nun trycatch\n\n    setComments(\n      comments.map((comment) => {\n        if (comment.id === id) {\n          return data;\n        }\n        return comment;\n      })\n    );\n\n    // alert(bodyDeLaRespuesta.error);\n  }\n\n  console.log(comments);\n\n  return (\n    <>\n      <News noticias={news}></News>\n      <div>\n        <button>Borrar noticia</button>\n      </div>\n      <div>\n        {comments.map((comment) => (\n          <Comment\n            key={comment.id}\n            comment={comment}\n            reactComment={reactComment}\n          ></Comment>\n        ))}\n      </div>\n      <div>\n        <form onSubmit={postCommentHandler}>\n          <div>\n            <h4>Comentario</h4>\n            <textarea\n              name=\"comment\"\n              type=\"text\"\n              rows=\"8\"\n              value={createComment}\n              onChange={(e) => setCreateComment(e.target.value)}\n            />\n          </div>\n          <input type=\"submit\" value=\"Publicar Comentario\"></input>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}