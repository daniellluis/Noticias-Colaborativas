{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTopNews, getDateNews } from \"../api/api\";\nimport { ErrorContext } from \"../components/error\";\n\nfunction useRemoteNewsTop() {\n  _s();\n\n  const [topNews, setTopNews] = useState([]);\n  useEffect(() => {\n    const cargarTopNews = async () => {\n      try {\n        const respuesta = await getTopNews();\n\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setTopNews(body);\n        } else {\n          setTopNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n\n    cargarTopNews();\n  }, []);\n  return [topNews, setTopNews];\n}\n\n_s(useRemoteNewsTop, \"8LSHi4pJ32FCI4dZ/rjT+kBbXMk=\");\n\nfunction useRemoteNewsDate() {\n  _s2();\n\n  const [dateNews, setDateNews] = useState([]);\n  useEffect(() => {\n    const cargarDateNews = async () => {\n      try {\n        const respuesta = await getDateNews();\n\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setDateNews(body);\n        } else {\n          setDateNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n\n    cargarDateNews();\n  }, []);\n  return [dateNews, setDateNews];\n}\n\n_s2(useRemoteNewsDate, \"6bM7cv0FV1fvQzBXf6H8w7R75EU=\");\n\nfunction useRemoteSingleNews() {\n  _s3();\n\n  const {\n    id\n  } = useParams();\n  const [News, setNews] = useState({});\n  const [, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n\n    getNews();\n  }, [id, setError]);\n  return [News, setNews];\n}\n\n_s3(useRemoteSingleNews, \"Jr8CvcT3ZaiVHGdisGiw0wdRMHQ=\", false, function () {\n  return [useParams];\n});\n\nexport { useRemoteNewsTop, useRemoteNewsDate, useRemoteSingleNews };","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/hooks/remoteHooks.js"],"names":["useEffect","useState","useContext","useParams","getTopNews","getDateNews","ErrorContext","useRemoteNewsTop","topNews","setTopNews","cargarTopNews","respuesta","ok","body","json","msg","console","error","useRemoteNewsDate","dateNews","setDateNews","cargarDateNews","useRemoteSingleNews","id","News","setNews","setError","getNews","response","fetch","method","headers","Error","message"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTopNews, getDateNews } from \"../api/api\";\nimport { ErrorContext } from \"../components/error\";\n\nfunction useRemoteNewsTop() {\n  const [topNews, setTopNews] = useState([]);\n  useEffect(() => {\n    const cargarTopNews = async () => {\n      try {\n        const respuesta = await getTopNews();\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n          setTopNews(body);\n        } else {\n          setTopNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n    cargarTopNews();\n  }, []);\n\n  return [topNews, setTopNews];\n}\n\nfunction useRemoteNewsDate() {\n  const [dateNews, setDateNews] = useState([]);\n\n  useEffect(() => {\n    const cargarDateNews = async () => {\n      try {\n        const respuesta = await getDateNews();\n        if (respuesta.ok) {\n          const body = await respuesta.json();\n\n          setDateNews(body);\n        } else {\n          setDateNews([]);\n        }\n      } catch (msg) {\n        console.error(msg);\n      }\n    };\n    cargarDateNews();\n  }, []);\n\n  return [dateNews, setDateNews];\n}\n\nfunction useRemoteSingleNews() {\n  const { id } = useParams();\n  const [News, setNews] = useState({});\n  const [, setError] = useContext(ErrorContext);\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/api/v1/news/${id}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-type\": \"application/json\",\n            },\n          }\n        );\n        const json = await response.json();\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    getNews();\n  }, [id, setError]);\n\n  return [News, setNews];\n}\n\nexport { useRemoteNewsTop, useRemoteNewsDate, useRemoteSingleNews };\n"]},"metadata":{},"sourceType":"module"}