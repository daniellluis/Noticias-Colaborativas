{"ast":null,"code":"var _jsxFileName = \"/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Token } from \"../components/token\";\nimport { deleteNews, postComment } from \"../api/api\";\nimport { postReactionComment } from \"../api/api\";\nimport { ErrorContext } from \"./error\";\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewsSinglePage() {\n  _s();\n\n  // NOTICIA\n  const [news, setNews] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(`http://localhost:3000/api/v1/news/${id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n\n    getNews();\n  }, [id, setError]); // COMENTARIOS\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(`http://localhost:3000/api/v1/news/${id}/comments`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    };\n\n    getComment();\n  }, [id]); // Crear comentario\n\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async e => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment\n    };\n    const response = await postComment(requestBody, id, token);\n    const body = await response.json();\n    console.log(body);\n  }; // ELIMINAR NOTICIA\n\n\n  async function deleteNewsHandler(e) {\n    try {\n      const idNews = e.target.value;\n      console.log(\"esto\", e);\n      const res = await deleteNews(idNews, token);\n      const bodyDeLaRespuesta = await res.json();\n\n      if (res.ok) {\n        setNews();\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {// console.error(error);\n    }\n  }\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction\n    };\n    const res = await postReactionComment(vote, id, token);\n    const data = await res.json();\n    console.log(data); //TODO: meter esto nun trycatch\n\n    setComments(comments.map(comment => {\n      if (comment.id === id) {\n        return data;\n      }\n\n      return comment;\n    })); // alert(bodyDeLaRespuesta.error);\n  }\n\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !news ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(News, {\n        noticias: news\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: news.id,\n          onClick: deleteNewsHandler,\n          children: \"Borrar noticia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          reactComment: reactComment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postCommentHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Comentario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              type: \"text\",\n              rows: \"8\",\n              value: createComment,\n              onChange: e => setCreateComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Publicar Comentario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(NewsSinglePage, \"pc5ZLWe1fl/CGqVczxC9LSgld0Y=\", false, function () {\n  return [useParams];\n});\n\n_c = NewsSinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsSinglePage\");","map":{"version":3,"sources":["/Users/daniellluis 1/Desktop/noticias_colaborativas/proyecto_final/frontend/src/components/NewsSinglePage.js"],"names":["useContext","useEffect","useState","Redirect","useParams","Token","deleteNews","postComment","postReactionComment","ErrorContext","Comment","News","NewsSinglePage","news","setNews","id","setError","getNews","response","fetch","method","headers","json","ok","Error","error","message","comments","setComments","getComment","console","createComment","setCreateComment","token","postCommentHandler","e","preventDefault","requestBody","comment","body","log","deleteNewsHandler","idNews","target","value","res","bodyDeLaRespuesta","reactComment","reaction","vote","like","dislike","data","map"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport { Token } from \"../components/token\";\n\nimport { deleteNews, postComment } from \"../api/api\";\nimport { postReactionComment } from \"../api/api\";\n\nimport { ErrorContext } from \"./error\";\n\nimport Comment from \"./Comment\";\nimport News from \"./News\";\nexport function NewsSinglePage() {\n  // NOTICIA\n  const [news, setNews] = useState([]);\n\n  const { id } = useParams();\n  const [, setError] = useContext(ErrorContext);\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/api/v1/news/${id}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-type\": \"application/json\",\n            },\n          }\n        );\n        const json = await response.json();\n        if (response.ok) {\n          setNews(json);\n        } else {\n          throw new Error(json.error);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    getNews();\n  }, [id, setError]);\n\n  // COMENTARIOS\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComment = async () => {\n      const response = await fetch(\n        `http://localhost:3000/api/v1/news/${id}/comments`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      );\n      if (response.ok) {\n        const json = await response.json();\n        setComments(json);\n      } else {\n        console.error(\"ERROR\");\n      }\n    };\n    getComment();\n  }, [id]);\n\n  // Crear comentario\n  const [createComment, setCreateComment] = useState([]);\n  const [token] = useContext(Token);\n\n  const postCommentHandler = async (e) => {\n    e.preventDefault();\n    const requestBody = {\n      comment: createComment,\n    };\n\n    const response = await postComment(requestBody, id, token);\n\n    const body = await response.json();\n    console.log(body);\n  };\n\n  // ELIMINAR NOTICIA\n\n  async function deleteNewsHandler(e) {\n    try {\n      const idNews = e.target.value;\n\n      console.log(\"esto\", e);\n      const res = await deleteNews(idNews, token);\n      const bodyDeLaRespuesta = await res.json();\n      if (res.ok) {\n        setNews();\n      } else {\n        throw new Error(bodyDeLaRespuesta.error);\n      }\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  async function reactComment(id, reaction) {\n    const vote = {\n      like: reaction,\n      dislike: !reaction,\n    };\n\n    const res = await postReactionComment(vote, id, token);\n\n    const data = await res.json();\n\n    console.log(data);\n\n    //TODO: meter esto nun trycatch\n\n    setComments(\n      comments.map((comment) => {\n        if (comment.id === id) {\n          return data;\n        }\n        return comment;\n      })\n    );\n\n    // alert(bodyDeLaRespuesta.error);\n  }\n\n  console.log(comments);\n\n  return (\n    <>\n      {!news ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <>\n          <News noticias={news}></News>\n          <div>\n            <button value={news.id} onClick={deleteNewsHandler}>\n              Borrar noticia\n            </button>\n          </div>\n          <div>\n            {comments.map((comment) => (\n              <Comment\n                key={comment.id}\n                comment={comment}\n                reactComment={reactComment}\n              ></Comment>\n            ))}\n          </div>\n          <div>\n            <form onSubmit={postCommentHandler}>\n              <div>\n                <h4>Comentario</h4>\n                <textarea\n                  name=\"comment\"\n                  type=\"text\"\n                  rows=\"8\"\n                  value={createComment}\n                  onChange={(e) => setCreateComment(e.target.value)}\n                />\n              </div>\n              <input type=\"submit\" value=\"Publicar Comentario\"></input>\n            </form>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}